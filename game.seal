include raylibseal as rl
include std
include list
include random

object Grid(x, y)
	x = x
	y = y
	has_mine = false
	mine_count = 0
	is_revealed = false
	is_flagged = false
	is_hovered = false

define draw_grid(grid)
	var tex
	if grid.is_flagged
		tex = grid_textures[GRID_TEX_FLAG]
	else if grid.is_revealed
		if not grid.has_mine
			tex = grid_textures[grid.mine_count + 3]
		else
			tex = grid_textures[GRID_TEX_MINE]
	else
		tex = grid_textures[GRID_TEX_DEF]
	var color
	if not grid.is_revealed and grid.is_hovered
		color = rl::color(230, 230, 230, 255)
	else
		color = rl::color(255, 255, 255, 255)
	rl::draw_texture(tex, grid.x * GRID_SIZE, grid.y * GRID_SIZE, color)

define update_grid(grid, mouse_pos)
	if grid.is_revealed
		return
	if (rl::is_cursor_on_screen() and\
	mouse_pos.x > grid.x * GRID_SIZE and\
	mouse_pos.x < grid.x * GRID_SIZE + GRID_SIZE and\
	mouse_pos.y > grid.y * GRID_SIZE and\
	mouse_pos.y < grid.y * GRID_SIZE + GRID_SIZE)	
		grid.is_hovered = true
		if not grid.is_flagged and rl::is_mouse_pressed(0)
			grid.is_revealed = true
			if not grid.has_mine and grid.mine_count == 0
				var n = grid.y * COLS + grid.x
				open_mineless_field(n)
		else if rl::is_mouse_pressed(1)
			grid.is_flagged = not grid.is_flagged
			if grid.is_flagged
				MINE_COUNT = MINE_COUNT - 1
			else
				MINE_COUNT = MINE_COUNT + 1
			std::writeln(MINE_COUNT)
	else
		grid.is_hovered = false

define plant_mines(grids)
	for i in std::span(MINE_COUNT)
		var counter = 0, rand = random::int(0, COLS * ROWS - i - 1)
		for grid in grids
			if grid.has_mine
				skip
			if counter == rand
				grid.has_mine = true
			counter = counter + 1

define count_grid_mines(grids)
	for i in std::span(COLS * ROWS)
		if grids[i].has_mine
			skip

		var mine_count = 0

		if i % COLS == 0 // left
			if grids[i + 1].has_mine
				mine_count = mine_count + 1
		else if i % COLS == COLS - 1 // right
			if grids[i - 1].has_mine
				mine_count = mine_count + 1
		else // middle
			if grids[i + 1].has_mine
				mine_count = mine_count + 1
			if grids[i - 1].has_mine
				mine_count = mine_count + 1

		if i / COLS == 0 // top
			if grids[i + COLS].has_mine
				mine_count = mine_count + 1
		else if i / COLS == ROWS - 1 // bottom
			if grids[i - COLS].has_mine
				mine_count = mine_count + 1
		else // middle
			if grids[i + COLS].has_mine
				mine_count = mine_count + 1
			if grids[i - COLS].has_mine
				mine_count = mine_count + 1

		if i % COLS != 0 and i - COLS - 1 >= 0 // top left corner
			if grids[i - COLS - 1].has_mine
				mine_count = mine_count + 1
		if i % COLS != COLS - 1 and i - COLS + 1 >= 0 // top right corner
			if grids[i - COLS + 1].has_mine
				mine_count = mine_count + 1
		if i % COLS != 0 and i + COLS - 1 < COLS * ROWS // bottom left corner
			if grids[i + COLS - 1].has_mine
				mine_count = mine_count + 1
		if i % COLS != COLS - 1 and i + COLS + 1 < COLS * ROWS // bottom right corner
			if grids[i + COLS + 1].has_mine
				mine_count = mine_count + 1

		grids[i].mine_count = mine_count

define open_mineless_field(n)
	var init = n
	while true
		n = n + 1
		if n > ROWS * COLS - 1 or\
		n % COLS == 0
			stop

		if grids[n].is_revealed or\
		grids[n].has_mine or\
		grids[n].is_flagged
			stop

		grids[n].is_revealed = true

		if grids[n].mine_count != 0
			stop
	n = init
	while true
		n = n - 1
		if n < 0 or\
		(n + 1) % COLS == 0
			stop

		if grids[n].is_revealed or\
		grids[n].has_mine or\
		grids[n].is_flagged
			stop

		grids[n].is_revealed = true

		if grids[n].mine_count != 0
			stop
	n = init
	while true
		n = n + COLS
		if n > COLS * ROWS - 1
			stop

		if grids[n].is_revealed or\
		grids[n].has_mine or\
		grids[n].is_flagged
			stop

		grids[n].is_revealed = true

		if grids[n].mine_count != 0
			stop
	n = init
	while true
		n = n - COLS
		if n < 0
			stop

		if grids[n].is_revealed or\
		grids[n].has_mine or\
		grids[n].is_flagged
			stop

		grids[n].is_revealed = true

		if grids[n].mine_count != 0
			stop

var GRID_SIZE = 48,\
		ROWS = 16,\
		COLS = 16,\
		MINE_COUNT = 40,\
		WIDTH = COLS * GRID_SIZE,\
		HEIGHT = ROWS * GRID_SIZE,\
		TITLE = "Minesweeper in Seal by Huseyn Agayev",\
		FPS = 60

var grids = []
var grid_textures = []

for i in std::span(COLS * ROWS)
	list::push(grids, Grid(i % COLS, i / COLS))
//	grids[i].is_revealed = true

plant_mines(grids)
count_grid_mines(grids)

//for grid in grids
//	std::writeln(grid.x, grid.y)

rl::init_window(WIDTH, HEIGHT, TITLE)
rl::set_exit_key(rl::keys().KEY_NULL)
rl::set_fps(FPS)

list::push(grid_textures, rl::load_texture("assets/grid_def.png"))
list::push(grid_textures, rl::load_texture("assets/grid_flag.png"))
list::push(grid_textures, rl::load_texture("assets/grid_mine.png"))
var GRID_TEX_DEF = 0
var GRID_TEX_FLAG = 1
var GRID_TEX_MINE = 2
for i in std::span(10)
	list::push(grid_textures, rl::load_texture("assets/grid_" + std::tostr(i) + ".png"))

while not rl::window_should_close()
	var mouse_pos = rl::mouse_pos()
	for	grid in grids
		update_grid(grid, mouse_pos)

	rl::begin_drawing()
	rl::clear_background(rl::color(240, 240, 240, 255))
	for grid in grids
		draw_grid(grid)
	rl::end_drawing()

rl::close_window()
